Installation and Usage
======================

Prerequisite
------------

**Prequisite:** METISSE requires gcc/6.4.0 or above

Download METISSE
----------------

METISSE is available for download at `here <https://github.com/TeamMETISSE>`_ .

The *makefile* in folder *make* contains all necessary instructions to compile METISSE in standalone mode. Just do ``./mk`` in the main directory (not in the make directory) to compile the package.

Using METISSE
-------------

Currently, METISSE can be used in the following modes:

1. Standalone mode
2. with BSE (Hurley et al. 2002)
3. with COSMIC (Brievik et al. 2020) (requires additional code from <link> to work)

Standalone mode
----------------

Supplying input
~~~~~~~~~~~~~~~

METISSE needs to know the values of mass, metallicity, and time up to which a star should be evolved.

Input parameters can be supplied using *evolve_metisse.in* file. It contains two Fortran namelists:

- *SSE_input_controls*: For providing parameters such as the mass, metallicity, and time up to which a star should evolve. Only used in standalone mode, ignored otherwise.
- *METISSE_input_controls*: It contains input parameters specific to METISSE.

Both are Fortran namelists, so comments (!) and blank lines can be used freely. Characters are **case-insensitive**. Note: Make sure to leave a blank line at the end of the file (after `/` symbol).

Use the format specified in `src/defaults/evolve_metisse_defaults.inc` for variable names. 
**Do not modify any file inside the defaults folder**.

Running METISSE
~~~~~~~~~~~~~~~

To run METISSE in the standalone or main mode, simply execute::

    ./metisse



.. METISSE will evolve a 1 M$_\odot$ star, of input metallicity up to 10 Gyr for you. 

Check *output* directory for output data files.

Output
~~~~~~

METISSE can produce two types of output files:

1. Files ending with .dat:

   SSE-like output files, controlled by ``write_track_to_file`` in SSE_input_controls. These contain the following stellar parameters until max_age. Time and age at hydrogen ZAMS are assumed to be zero.

   - *time*: Physical time [Myr]
   - *age*: Age of star [Myr]
   - *mass*: Current mass of the star [M$_\odot$]
   - *core_mass*: Mass of dominant core [M$_\odot$]
   - *He_core*: Mass of helium core [M$_\odot$]
   - *CO_core*: Mass of carbon-oxygen core [M$_\odot$]
   - *log_L*: Log of surface luminosity [L$_\odot$]
   - *log_Teff*: Log of effective temperature [K]
   - *log_radius*: Log of radius [R$_\odot$]
   - *phase*: SSE phase number
   - *e*: Extra information (not of general relevance - to be removed in future)

2. Files ending with .eep:

   For debugging purposes, METISSE can write mass interpolated files with the same columns as input files (plus phase column) and MIST-style file structure. Only contains data from ZAMS to the end of AGB or carbon burning phase. Can be activated by ``write_eep_file`` in METISSE_input_controls.


*********************
Package documentation
*********************

Please consult these pages for more details on the files in METISSE:


.. toctree::
   :maxdepth: 0

   contents

